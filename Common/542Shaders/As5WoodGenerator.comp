///* Start Header -------------------------------------------------------
//Copyright (C) Spring2023 DigiPen Institute of Technology.
//Reproduction or disclosure of this file or its contents without the prior written
//consent of DigiPen Institute of Technology is prohibited.
//File Name: As5WoodGenerator.comp
//Purpose: compute shader to calculate ambient occlusion map
//Language: GLSL
//Platform: Windows SDK version: 10.0.19041.0, OS: Windows 10. GPU: NVIDIA GeForce840M. OpenGL Driver version: 10.18.15.4279, 8-24-2015
//Project: sinil.kang_CS562_5
//Author: Sinil Kang = sinil.kang = Colleague ID: 0052782
//Creation date: 4/7/2023
//End Header --------------------------------------------------------*/

#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

uniform sampler2D HighlightColorNoise;
uniform sampler2D DistortionNoise;
uniform sampler1D ColorDecisionNoise;
uniform sampler1D RingWidthModulationNoise;
layout(rgba32f) uniform restrict writeonly image2D dst;
layout(rgba32f) uniform restrict writeonly image2D dstSpecular;

uniform vec3 earlyColor;
uniform vec3 lateColor;
uniform int imageSize;

uniform float distortionStrength;
uniform float colorVariationStrength;

void main()
{
	ivec2 gpos = ivec2(gl_GlobalInvocationID.xy);

	float distortedRadius = texture(DistortionNoise, vec2(gpos) / imageSize).r;
	
	float colorDecision = texture(ColorDecisionNoise, (float(gpos.x+ (distortedRadius * distortionStrength)) / imageSize )).r;
	vec4 result;
	result.xyz = mix(earlyColor, lateColor, colorDecision);

	float highlightColor = texture(HighlightColorNoise, vec2(gpos) / imageSize).r;
	float colorVariation = 1 + (highlightColor * colorVariationStrength);
	result.x = pow(result.x, colorVariation);
	result.y = pow(result.y, colorVariation);
	result.z = pow(result.z, colorVariation);

	result.w = 1.f;

	imageStore(dst, gpos, result);
	vec4 specularResult;
	specularResult = vec4(mix(1.f, 0.5f, colorDecision));
	imageStore(dstSpecular, gpos, specularResult);
}